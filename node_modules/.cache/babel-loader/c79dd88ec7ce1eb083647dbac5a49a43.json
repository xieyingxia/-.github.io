{"ast":null,"code":"var _jsxFileName = \"/Users/xiangmingxin/\\u4E2A\\u4EBA\\u9879\\u76EE/react_shop/react/react_shop/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //redux\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\"; // 国际化\n\nimport { addLocaleData, IntlProvider } from 'react-intl'; // import intl from 'intl';\n\nimport en from 'react-intl/locale-data/en';\nimport zh from 'react-intl/locale-data/zh';\nimport en_US from './locale/en_US';\nimport zh_CN from './locale/zh_CN';\nimport { Provider } from \"react-redux\";\nimport allReducer from \"./store/reducers\";\nimport \"./static/javascript/rem\";\nimport \"./static/css/main.less\";\nimport 'antd-mobile/dist/antd-mobile.css';\naddLocaleData([...en, ...zh]); //创建store 仓库\n\nconst store = createStore(allReducer, {}, composeWithDevTools(applyMiddleware(logger, thunk))); // 来存放应用的状态。\n// store.subscribe(() => console.log(\"state\",store.getState())) //注册监听器;\n//dispatch(action) 方法更新 state；\n// changeLanguage(lang) {\n//   this.setState({\n//       lang: lang\n//   })\n// }\n// render(){\n//     let messages = {}\n//     messages['en'] = en_US\n//     messages['zh'] = zh_CN\n//     return(\n//       <Provider store= {store}>\n//           <IntlProvider locale={this.state.lang} messages={messages[this.state.lang]}>\n//                <App/>\n//           </IntlProvider>\n//       </Provider>  \n//       , document.getElementById('root')\n//    ) \n// };\n// changeLanguage(lang) {\n//   this.setState({\n//       lang: lang\n//   })\n// }\n\nconst render = Component => {\n  let messages = {};\n  messages['en'] = en_US;\n  messages['zh'] = zh_CN;\n  ReactDOM.render(React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IntlProvider, {\n    locale: this.state.lang,\n    messages: messages[this.state.lang],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), document.getElementById('root'));\n};\n\nrender();","map":{"version":3,"sources":["/Users/xiangmingxin/个人项目/react_shop/react/react_shop/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","composeWithDevTools","logger","thunk","addLocaleData","IntlProvider","en","zh","en_US","zh_CN","Provider","allReducer","store","render","Component","messages","state","lang","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C,C,CACA;;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,yBAAP;AACA,OAAO,wBAAP;AACA,OAAO,kCAAP;AACAP,aAAa,CAAC,CAAC,GAAGE,EAAJ,EAAO,GAAGC,EAAV,CAAD,CAAb,C,CAEA;;AACA,MAAMK,KAAK,GAAGb,WAAW,CAACY,UAAD,EAAY,EAAZ,EAAeV,mBAAmB,CAACD,eAAe,CAACE,MAAD,EAAQC,KAAR,CAAhB,CAAlC,CAAzB,C,CAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMU,MAAM,GAAGC,SAAS,IAAI;AACtB,MAAIC,QAAQ,GAAG,EAAf;AACFA,EAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiBP,KAAjB;AACAO,EAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiBN,KAAjB;AACFZ,EAAAA,QAAQ,CAACgB,MAAT,CACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAGD,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAE,KAAKI,KAAL,CAAWC,IAAjC;AAAuC,IAAA,QAAQ,EAAEF,QAAQ,CAAC,KAAKC,KAAL,CAAWC,IAAZ,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ,CADJ,EAMMC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANN;AAQD,CAZD;;AAaAN,MAAM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n//redux\nimport {createStore,applyMiddleware} from \"redux\"\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport logger from \"redux-logger\"\nimport thunk from \"redux-thunk\"\n// 国际化\nimport { addLocaleData, IntlProvider } from 'react-intl';\n// import intl from 'intl';\nimport en from 'react-intl/locale-data/en'\nimport zh from 'react-intl/locale-data/zh'\nimport en_US from './locale/en_US'\nimport zh_CN from './locale/zh_CN'\n\nimport { Provider } from \"react-redux\"\nimport allReducer from \"./store/reducers\"\nimport \"./static/javascript/rem\"\nimport \"./static/css/main.less\"\nimport 'antd-mobile/dist/antd-mobile.css'\naddLocaleData([...en,...zh]);\n\n//创建store 仓库\nconst store = createStore(allReducer,{},composeWithDevTools(applyMiddleware(logger,thunk)))// 来存放应用的状态。\n// store.subscribe(() => console.log(\"state\",store.getState())) //注册监听器;\n//dispatch(action) 方法更新 state；\n// changeLanguage(lang) {\n//   this.setState({\n//       lang: lang\n//   })\n// }\n\n// render(){\n//     let messages = {}\n//     messages['en'] = en_US\n//     messages['zh'] = zh_CN\n//     return(\n//       <Provider store= {store}>\n//           <IntlProvider locale={this.state.lang} messages={messages[this.state.lang]}>\n//                <App/>\n//           </IntlProvider>\n//       </Provider>  \n//       , document.getElementById('root')\n//    ) \n// };\n\n// changeLanguage(lang) {\n//   this.setState({\n//       lang: lang\n//   })\n// }\nconst render = Component => {\n      let messages = {}\n    messages['en'] = en_US\n    messages['zh'] = zh_CN\n  ReactDOM.render(\n      <Provider store= {store}>\n          <IntlProvider locale={this.state.lang} messages={messages[this.state.lang]}>\n               <App/>\n          </IntlProvider>\n      </Provider>  \n      , document.getElementById('root')\n  )\n}\nrender();\n\n"]},"metadata":{},"sourceType":"module"}