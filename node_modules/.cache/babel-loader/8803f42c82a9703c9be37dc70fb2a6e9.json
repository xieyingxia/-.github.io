{"ast":null,"code":"// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function (global) {\n  'use strict';\n\n  if (!global.console) {\n    global.console = {};\n  }\n\n  var con = global.console;\n  var prop, method;\n\n  var dummy = function () {};\n\n  var properties = ['memory'];\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy; // Using `this` for web workers & supports Browserify / Webpack.\n\n})(typeof window === 'undefined' ? this : window);","map":{"version":3,"sources":["C:/Users/user/Downloads/reactjanpanproject1 - 复件(2)/reactjanpanproject1/node_modules/console-polyfill/index.js"],"names":["global","console","con","prop","method","dummy","properties","methods","split","pop","window"],"mappings":"AAAA;AACA;AACA;AACA,CAAC,UAASA,MAAT,EAAiB;AAChB;;AACA,MAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;AACnBD,IAAAA,MAAM,CAACC,OAAP,GAAiB,EAAjB;AACD;;AACD,MAAIC,GAAG,GAAGF,MAAM,CAACC,OAAjB;AACA,MAAIE,IAAJ,EAAUC,MAAV;;AACA,MAAIC,KAAK,GAAG,YAAW,CAAE,CAAzB;;AACA,MAAIC,UAAU,GAAG,CAAC,QAAD,CAAjB;AACA,MAAIC,OAAO,GAAG,CAAC,+DACZ,4EADY,GAEZ,mEAFW,EAE0DC,KAF1D,CAEgE,GAFhE,CAAd;;AAGA,SAAOL,IAAI,GAAGG,UAAU,CAACG,GAAX,EAAd,EAAgC,IAAI,CAACP,GAAG,CAACC,IAAD,CAAR,EAAgBD,GAAG,CAACC,IAAD,CAAH,GAAY,EAAZ;;AAChD,SAAOC,MAAM,GAAGG,OAAO,CAACE,GAAR,EAAhB,EAA+B,IAAI,CAACP,GAAG,CAACE,MAAD,CAAR,EAAkBF,GAAG,CAACE,MAAD,CAAH,GAAcC,KAAd,CAbjC,CAchB;;AACD,CAfD,EAeG,OAAOK,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAf1C","sourcesContent":["// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function(global) {\n  'use strict';\n  if (!global.console) {\n    global.console = {};\n  }\n  var con = global.console;\n  var prop, method;\n  var dummy = function() {};\n  var properties = ['memory'];\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n  // Using `this` for web workers & supports Browserify / Webpack.\n})(typeof window === 'undefined' ? this : window);\n"]},"metadata":{},"sourceType":"script"}